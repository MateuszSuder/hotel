services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    depends_on:
      - api-gateway
      - user-service
      - reservation-service
      - room-service
  frontend:
    container_name: ${FRONTEND_NAME}
    build:
      context: ./${FRONTEND_NAME}
      args:
        PORT: ${FRONTEND_PORT}
        NAME: ${FRONTEND_NAME}
    environment:
      - PORT=${FRONTEND_PORT}
      - NAME=${FRONTEND_NAME}
      - CHOKIDAR_USEPOLLING=true
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    volumes:
      - ./${FRONTEND_NAME}:/${FRONTEND_NAME}:delegated
      - /node_modules
  api-gateway:
    container_name: ${GATEWAY_NAME}
    restart: always
    build:
      context: ./${GATEWAY_NAME}
      args:
        PORT: ${GATEWAY_PORT}
        NAME: ${GATEWAY_NAME}
    env_file:
      - .env
    environment:
      - DB_CONTAINER_NAME=${DB_NAME}
      - PORT=${GATEWAY_PORT}
      - NAME=${GATEWAY_NAME}
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
    volumes:
      - ./${GATEWAY_NAME}:/${GATEWAY_NAME}
      - /${GATEWAY_NAME}/node_modules
    depends_on:
      - mongo
  user-service:
    container_name: ${USER_NAME}
    restart: always
    build:
      context: ./${USER_NAME}
      args:
        PORT: ${USER_PORT}
        NAME: ${USER_NAME}
    env_file:
      - .env
    environment:
      - DB_CONTAINER_NAME=${DB_NAME}
      - PORT=${USER_PORT}
      - NAME=${USER_NAME}
    ports:
      - 127.0.0.1:${USER_PORT}:${USER_PORT}
    volumes:
      - ./${USER_NAME}:/${USER_NAME}
      - /${USER_NAME}/node_modules
    depends_on:
      - mongo
  room-service:
    container_name: ${ROOM_NAME}
    restart: always
    build:
      context: ./${ROOM_NAME}
      args:
        PORT: ${ROOM_PORT}
        NAME: ${ROOM_NAME}
    env_file:
      - .env
    environment:
      - DB_CONTAINER_NAME=${DB_NAME}
      - PORT=${ROOM_PORT}
      - NAME=${ROOM_NAME}
    ports:
      - 127.0.0.1:${ROOM_PORT}:${ROOM_PORT}
    volumes:
      - ./${ROOM_NAME}:/${ROOM_NAME}
      - /${ROOM_NAME}/node_modules
    depends_on:
      - mongo
  reservation-service:
    container_name: ${RESERVATION_NAME}
    restart: always
    build:
      context: ./${RESERVATION_NAME}
      args:
        PORT: ${RESERVATION_PORT}
        NAME: ${RESERVATION_NAME}
    env_file:
      - .env
    environment:
      - DB_CONTAINER_NAME=${DB_NAME}
      - PORT=${RESERVATION_PORT}
      - NAME=${RESERVATION_NAME}
    ports:
      - 127.0.0.1:${RESERVATION_PORT}:${RESERVATION_PORT}
    volumes:
      - ./${RESERVATION_NAME}:/${RESERVATION_NAME}
      - /${RESERVATION_NAME}/node_modules
    depends_on:
      - mongo
  mongo:
    container_name: ${DB_NAME}
    restart: always
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - 127.0.0.1:${DB_PORT}:${DB_PORT}
    volumes:
      - ./mongo_data:/data/db